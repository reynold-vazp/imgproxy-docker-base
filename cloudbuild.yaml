steps:
- id: 'docker_ppc64le'
  name: 'docker'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes \
      && docker build \
        --build-arg TARGET_ARCH=ppc64le \
        -t darthsim/imgproxy-base:${TAG_NAME}-ppc64le \
        .
  env:
    - DOCKER_BUILDKIT=1
  waitFor: ['-']
  
- id: 'docker_amd64'
  name: 'docker'
  args: ['build', '-t', 'darthsim/imgproxy-base:${TAG_NAME}-amd64', '.']
  env:
    - DOCKER_BUILDKIT=1
  waitFor: ['-']

- id: 'docker_arm64'
  name: 'docker'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes \
      && docker build \
        --build-arg TARGET_ARCH=arm64 \
        -t darthsim/imgproxy-base:${TAG_NAME}-arm64 \
        .
  env:
    - DOCKER_BUILDKIT=1
  waitFor: ['-']

#- id: 'push'
#  name: 'docker'
#  entrypoint: 'sh'
#  args:
#    - '-c'
#    - |
#      apk add --no-cache bash \
#      && docker login -u darthsim -p $$DOCKER_HUB_TOKEN \
#      && ./push-images.sh ${TAG_NAME}
#  secretEnv: ['DOCKER_HUB_TOKEN']
#  waitFor: ['docker_amd64', 'docker_arm64']


#availableSecrets:
#  secretManager:
#    - versionName: projects/${PROJECT_ID}/secrets/DOCKER_HUB_TOKEN/versions/latest
#      env: DOCKER_HUB_TOKEN

#options:
#  machineType: 'N1_HIGHCPU_8'
#  logging: CLOUD_LOGGING_ONLY

timeout: 7200s
